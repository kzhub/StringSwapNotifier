import Head from "next/head";
import { AddIcon } from "@chakra-ui/icons";
import { useState, useEffect } from "react";
import axios from "axios";
import {
	Table,
	Thead,
	Tbody,
	Tr,
	Th,
	TableCaption,
	TableContainer,
	useDisclosure,
} from '@chakra-ui/react'

import CreateModal from "@/components/organisms/CreateModal";
import { TableListChild } from "@/components/molecules/TableListChild";

export default function Home({ data }) {
	const [currentData, setCurrentData] = useState(null)

	const handleClickDelete = async (id) => {
		const targetCellId = id
		try {
			const response = await axios.delete(`/api/delete`, {
				params: { targetCellId },
			});
		} catch (error) {
			console.log('error')
		}
	}

	const getAllData = async () => {
		try {
			const { data } = await axios.get('/api/read');
			const resData = data.firestoreData
			setCurrentData(resData)
		} catch (error) {
			console.error('エラーが発生しました:', error);
		}
	};

	useEffect(() => {
		getAllData()
	}, [])


	const { isOpen, onOpen, onClose } = useDisclosure()

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>

				{isOpen && <CreateModal isOpen={isOpen} onClose={onClose} />}

				<div>
					<AddIcon onClick={onOpen} />
				</div>

				<TableContainer>
					<Table variant='simple'>
						<TableCaption>Imperial to metric conversion factors</TableCaption>

						<Thead>
							<Tr>
								<Th>使用弦</Th>
								<Th>登録日</Th>
								<Th>張り替え予定日</Th>
							</Tr>
						</Thead>

						<Tbody>
							{currentData !== null ? (
								<>
									{currentData.map((item) => (
										<TableListChild
											key={item.id}
											id={item.id}
											title={item["string-name"]}
											startDate={new Date(item["start-date"]._seconds * 1000).toLocaleDateString()}
											changeDate={new Date(item["change-date"]._seconds * 1000).toLocaleDateString()}
											handleClickDelete={handleClickDelete}
										/>
									))}
								</>
							) : (
								<Tr>
								</Tr>
							)}

						</Tbody>

					</Table>
				</TableContainer>
			</main>
		</>
	);
}
